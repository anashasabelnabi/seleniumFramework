<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="9" passed="3" failed="1" skipped="3">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-11-28T21:49:09 EET" name="nopcommerce regression suit" finished-at="2020-11-28T21:49:50 EET" duration-ms="41077">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.MyAccountTest@295bf2a]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:tests.UserRegistrationTest@31ceba99]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2020-11-28T21:49:09 EET" name="Regression Test" finished-at="2020-11-28T21:49:50 EET" duration-ms="41077">
      <class name="tests.UserRegistrationTest">
        <test-method is-config="true" signature="startDriver(java.lang.String)[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:03 EET" name="startDriver" finished-at="2020-11-28T21:49:09 EET" duration-ms="5753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome-headless]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startDriver -->
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:09 EET" name="setUpClass" finished-at="2020-11-28T21:49:09 EET" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="userCanRegestrationSuccessfully()[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:09 EET" name="userCanRegestrationSuccessfully" finished-at="2020-11-28T21:49:14 EET" duration-ms="4788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegestrationSuccessfully -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:14 EET" name="takeScreenshotOnFailure" finished-at="2020-11-28T21:49:14 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegestrationSuccessfully status=SUCCESS method=UserRegistrationTest.userCanRegestrationSuccessfully()[pri:0, instance:tests.UserRegistrationTest@31ceba99] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="userCanLogut()[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:14 EET" name="userCanLogut" finished-at="2020-11-28T21:49:16 EET" depends-on-methods="tests.UserRegistrationTest.userCanRegestrationSuccessfully" duration-ms="1939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanLogut -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:16 EET" name="takeScreenshotOnFailure" finished-at="2020-11-28T21:49:16 EET" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanLogut status=SUCCESS method=UserRegistrationTest.userCanLogut()[pri:0, instance:tests.UserRegistrationTest@31ceba99] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="userCanLogin()[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:16 EET" name="userCanLogin" finished-at="2020-11-28T21:49:19 EET" depends-on-methods="tests.UserRegistrationTest.userCanLogut" duration-ms="3125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanLogin -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:19 EET" name="takeScreenshotOnFailure" finished-at="2020-11-28T21:49:19 EET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanLogin status=SUCCESS method=UserRegistrationTest.userCanLogin()[pri:0, instance:tests.UserRegistrationTest@31ceba99] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:19 EET" name="tearDownClass" finished-at="2020-11-28T21:49:19 EET" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="stopDriver()[pri:0, instance:tests.UserRegistrationTest@31ceba99]" started-at="2020-11-28T21:49:50 EET" name="stopDriver" finished-at="2020-11-28T21:49:51 EET" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopDriver -->
      </class> <!-- tests.UserRegistrationTest -->
      <class name="tests.MyAccountTest">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:tests.MyAccountTest@295bf2a]" started-at="2020-11-28T21:49:19 EET" name="setUpClass" finished-at="2020-11-28T21:49:19 EET" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="userCanRegestrationSuccessfully()[pri:0, instance:tests.MyAccountTest@295bf2a]" started-at="2020-11-28T21:49:19 EET" name="userCanRegestrationSuccessfully" finished-at="2020-11-28T21:49:49 EET" duration-ms="30082" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"link text","selector":"Register"}
  (Session info: headless chrome=85.0.4183.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'anas-Lenovo-G50-70', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-53-generic', java.version: '11.0.9.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /tmp/.com.google.Chrome.XXxrly}, goog:chromeOptions: {debuggerAddress: localhost:43271}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 9c354c9bd68207480b3e1fa39c136b5c
*** Element info: {Using=link text, value=Register}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"Register"}
  (Session info: headless chrome=85.0.4183.121)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'anas-Lenovo-G50-70', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-53-generic', java.version: '11.0.9.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /tmp/.com.google.Chrome.XXxrly}, goog:chromeOptions: {debuggerAddress: localhost:43271}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 9c354c9bd68207480b3e1fa39c136b5c
*** Element info: {Using=link text, value=Register}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByLinkText(RemoteWebDriver.java:380)
at org.openqa.selenium.By$ByLinkText.findElement(By.java:220)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy19.click(Unknown Source)
at pages.PageBase.clickButton(PageBase.java:17)
at pages.HomePage.clickRegestraionBtn(HomePage.java:25)
at tests.MyAccountTest.userCanRegestrationSuccessfully(MyAccountTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanRegestrationSuccessfully -->
        <test-method is-config="true" signature="takeScreenshotOnFailure(org.testng.ITestResult)[pri:0, instance:tests.MyAccountTest@295bf2a]" started-at="2020-11-28T21:49:49 EET" name="takeScreenshotOnFailure" finished-at="2020-11-28T21:49:50 EET" duration-ms="831" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userCanRegestrationSuccessfully status=FAILURE method=MyAccountTest.userCanRegestrationSuccessfully()[pri:0, instance:tests.MyAccountTest@295bf2a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotOnFailure -->
        <test-method signature="userCanChangePasswordSuccessfully()[pri:0, instance:tests.MyAccountTest@295bf2a]" started-at="2020-11-28T21:49:50 EET" name="userCanChangePasswordSuccessfully" finished-at="2020-11-28T21:49:50 EET" depends-on-methods="tests.MyAccountTest.userCanRegestrationSuccessfully" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method MyAccountTest.userCanChangePasswordSuccessfully()[pri:0, instance:tests.MyAccountTest@295bf2a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method MyAccountTest.userCanChangePasswordSuccessfully()[pri:0, instance:tests.MyAccountTest@295bf2a] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanChangePasswordSuccessfully -->
        <test-method signature="userCanLogut()[pri:0, instance:tests.MyAccountTest@295bf2a]" started-at="2020-11-28T21:49:50 EET" name="userCanLogut" finished-at="2020-11-28T21:49:50 EET" depends-on-methods="tests.MyAccountTest.userCanChangePasswordSuccessfully" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method MyAccountTest.userCanLogut()[pri:0, instance:tests.MyAccountTest@295bf2a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method MyAccountTest.userCanLogut()[pri:0, instance:tests.MyAccountTest@295bf2a] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanLogut -->
        <test-method signature="userCanLogin()[pri:0, instance:tests.MyAccountTest@295bf2a]" started-at="2020-11-28T21:49:50 EET" name="userCanLogin" finished-at="2020-11-28T21:49:50 EET" depends-on-methods="tests.MyAccountTest.userCanLogut" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method MyAccountTest.userCanLogin()[pri:0, instance:tests.MyAccountTest@295bf2a] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method MyAccountTest.userCanLogin()[pri:0, instance:tests.MyAccountTest@295bf2a] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCanLogin -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:tests.MyAccountTest@295bf2a]" started-at="2020-11-28T21:49:50 EET" name="tearDownClass" finished-at="2020-11-28T21:49:50 EET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- tests.MyAccountTest -->
    </test> <!-- Regression Test -->
  </suite> <!-- nopcommerce regression suit -->
</testng-results>
